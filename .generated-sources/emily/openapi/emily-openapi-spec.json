{
  "openapi": "3.0.3",
  "info": {
    "title": "emily-openapi-spec",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/deposit": {
      "get": {
        "tags": [
          "deposit"
        ],
        "summary": "Get deposits handler.",
        "operationId": "getDeposits",
        "responses": {
          "201": {
            "description": "Deposits retrieved successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OperationLambda}/invocations"
          }
        }
      },
      "post": {
        "tags": [
          "deposit"
        ],
        "summary": "Create deposit handler.",
        "operationId": "createDeposit",
        "responses": {
          "201": {
            "description": "Deposit created successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OperationLambda}/invocations"
          }
        }
      },
      "put": {
        "tags": [
          "deposit"
        ],
        "summary": "Update deposits handler.",
        "operationId": "updateDeposits",
        "responses": {
          "201": {
            "description": "Deposits updated successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OperationLambda}/invocations"
          }
        }
      }
    },
    "/deposit/{txid}": {
      "get": {
        "tags": [
          "deposit"
        ],
        "summary": "Get deposits for transaction handler.",
        "operationId": "getDepositsForTransaction",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "description": "txid associated with the Deposit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Deposits retrieved successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OperationLambda}/invocations"
          }
        }
      }
    },
    "/deposit/{txid}/{index}": {
      "get": {
        "tags": [
          "deposit"
        ],
        "summary": "Get deposit handler.",
        "operationId": "getDeposit",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "description": "txid associated with the Deposit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "in": "path",
            "description": "output index associated with the Deposit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Deposit retrieved successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OperationLambda}/invocations"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Get health handler.",
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "Successfully retrieved health data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthData"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OperationLambda}/invocations"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "description": "Structure representing an error response\nThis is used to serialize error messages in HTTP responses",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "HealthData": {
        "type": "object",
        "description": "Struct that represents the current status of the API.",
        "required": [
          "is_okay"
        ],
        "properties": {
          "is_okay": {
            "type": "boolean",
            "description": "Whether the API is okay."
          }
        }
      }
    }
  }
}