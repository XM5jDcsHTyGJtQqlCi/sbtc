/*
 * blocklist-openapi-gen
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BlocklistStatus : The BlocklistStatus of a user address
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BlocklistStatus {
    /// Blocklist client's acceptance decision based on the risk severity of the address
    #[serde(rename = "accept")]
    pub accept: bool,
    /// Whether the address is blocklisted or not
    #[serde(rename = "is_blocklisted")]
    pub is_blocklisted: bool,
    /// Reason for the acceptance decision
    #[serde(
        rename = "reason",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub reason: Option<Option<String>>,
    #[serde(rename = "severity")]
    pub severity: models::RiskSeverity,
}

impl BlocklistStatus {
    /// The BlocklistStatus of a user address
    pub fn new(
        accept: bool,
        is_blocklisted: bool,
        severity: models::RiskSeverity,
    ) -> BlocklistStatus {
        BlocklistStatus {
            accept,
            is_blocklisted,
            reason: None,
            severity,
        }
    }
}
