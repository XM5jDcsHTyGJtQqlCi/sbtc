FROM rust:bookworm as builder

# Install dependencies.
RUN apt-get update
RUN apt-get install -y \
    libclang-dev \
    git \
    pkg-config \
    libssl-dev \
    make \
    protobuf-compiler \
    npm \
    default-jre
RUN npm install -g pnpm@9
RUN npm install -g @openapitools/openapi-generator-cli
RUN rustup toolchain install stable
RUN rustup component add rustfmt --toolchain stable
# Setup the code.
RUN mkdir /code
WORKDIR /code
RUN git clone https://github.com/stacks-network/sbtc.git
WORKDIR /code/sbtc


RUN make install
RUN make build

# Generate CDK template
# ------------------------------------------------------------------------------
ARG AWS_STAGE=local
ARG TABLES_ONLY=true

# TODO: Use make command to generat the cdk template.
RUN pnpm --filter emily-cdk run synth

# NOTE: If you want to synthsize with the lambda and apigateway instance as well
# you need to also compile the emily handler as a lambda and generate the openapi
# spec before attempting to synthesize the cdk template.

# Compile emily handler as a warp server.
# ------------------------------------------------------------------------------
RUN cargo build --bin emily-server

# Create Docker image to setup AWS resources.
# ------------------------------------------------------------------------------
FROM python:3.12-slim AS emily-aws-setup
WORKDIR /code
COPY --from=builder /code/sbtc/devenv/aws-setup/initialize.py /code/initialize.py
COPY --from=builder /code/sbtc/emily/cdk/cdk.out /code/cdk.out
RUN pip3 install boto3
# The local lambda path is not used here because we're only deploying with the
# dynamodb tables. This will need to point to the local lambda zip file
# that was compiled to be deployed.
ENV LOCAL_LAMBDA_PATH=/code/your-compiled-aws-lambda-here.zip
ENV DYNAMODB_ENDPOINT=http://dynamodb:8000
ENV INPUT_CDK_TEMPLATE=/code/cdk.out/EmilyStack.template.json
ENV OUTPUT_CDK_TEMPLATE=/code/cdk.out/EmilyStack.devenv.template.json
ENTRYPOINT ["python3", "/code/initialize.py"]

# Create Docker image to run the emily server.
# ------------------------------------------------------------------------------
FROM debian:bookworm-slim AS emily-server
WORKDIR /code
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /code/sbtc/target/debug/emily-server /usr/local/bin/emily-server
ENV HOST=0.0.0.0
ENV PORT=3031
ENV DYNAMODB_ENDPOINT=http://dynamodb:8000
ENTRYPOINT ["/bin/sh", "-c", "/usr/local/bin/emily-server --host $HOST --port $PORT --dynamodb-endpoint $DYNAMODB_ENDPOINT"]

# TODO(TBD): Create the docker image for the sBTC Signer here.
# TODO(TBD): Create the docker image for the blocklist client here.
